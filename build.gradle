plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id "com.github.node-gradle.node" version "3.3.0"
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

node {
    nodeModulesDir = file("$projectDir/front-end")
    version = '18.3.0'
    download = true
}

task npmBuild(type: NpmTask) {
    args = ['run', "build"]
}

task copyFrontEnd(type: Copy) {
    from "$projectDir/front-end/static"
    into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
    delete "$projectDir/front-end/static", "$projectDir/front-end/node_modules"
}

npmBuild.dependsOn npmInstall
copyFrontEnd.dependsOn npmBuild
compileJava.dependsOn copyFrontEnd

clean.dependsOn cleanFrontEnd

