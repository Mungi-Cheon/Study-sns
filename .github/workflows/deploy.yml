name: Deploy

on:
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Add permission
        run: chmod +x gradlew

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: "${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint and automatically fix problems
        run: npx eslint --fix src/

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
        with:
          arguments: build -Pprofile=dev
          env:
            CI:false

      - name: 테스트 결과 등록
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 테스트 실패 Lines 등록
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: SSH Agent 설정
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEVELOP_SSH_KEY }}

      - name: AWS EC2 배포 - 파일전송
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEVELOP_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.DEVELOP_HOST }}
          REMOTE_USER: ${{ secrets.DEVELOP_USERNAME }}
          SOURCE: 'build/libs/'
          TARGET: '~/app/study-sns'
          EXCLUDE: '/**/*.jar'

      - name: jar 파일 실행
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEVELOP_USERNAME }}@${{ secrets.DEVELOP_HOST }} << EOF
            pkill -f 'Study-sns-0.0.1-SNAPSHOT.jar' || true
            cd ~/app/study-sns
            nohup java -jar -Dspring.profiles.active=develop Study-sns-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEVELOP_SSH_KEY }}
